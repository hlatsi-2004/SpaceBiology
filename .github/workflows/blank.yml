import javax.swing.*;
import java.awt.*;
import java.util.*;

// Class representing a single publication
class Publication {
    String title;
    String introduction;
    String results;
    String conclusion;

    public Publication(String title, String introduction, String results, String conclusion) {
        this.title = title;
        this.introduction = introduction;
        this.results = results;
        this.conclusion = conclusion;
    }

    // Simple summary: first sentence from Results and Conclusion
    public String summarize() {
        String resultSummary = results.split("\\.")[0];
        String conclusionSummary = conclusion.split("\\.")[0];
        return "Summary: " + resultSummary + ". " + conclusionSummary + ".";
    }

    // Needed for JList display
    @Override
    public String toString() {
        return title;
    }
}

// Main GUI class
public class SpaceBiology {

    private JFrame frame;
    private JList<Publication> publicationList;
    private JTextArea summaryArea;

    public SpaceBiology(List<Publication> publications) {
        frame = new JFrame("NASA Space Biology Dashboard");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(700, 400);

        // Left panel: list of publications (using Vector to avoid issues)
        publicationList = new JList<>(new Vector<>(publications));
        JScrollPane listScrollPane = new JScrollPane(publicationList);

        // Right panel: summary display
        summaryArea = new JTextArea();
        summaryArea.setEditable(false);
        summaryArea.setLineWrap(true);
        summaryArea.setWrapStyleWord(true);
        JScrollPane summaryScrollPane = new JScrollPane(summaryArea);

        // Split pane for left and right panels
        JSplitPane splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, listScrollPane, summaryScrollPane);
        splitPane.setDividerLocation(300);

        frame.setLayout(new BorderLayout());
        frame.add(splitPane, BorderLayout.CENTER);

        // Event: show summary when a publication is selected
        publicationList.addListSelectionListener(e -> {
            Publication selected = publicationList.getSelectedValue();
            if (selected != null) {
                summaryArea.setText(selected.summarize());
            }
        });

        frame.setVisible(true);
    }

    public static void main(String[] args) {
        // Example publications
        List<Publication> publications = new ArrayList<>();
        publications.add(new Publication(
                "Effect of Microgravity on Plant Growth",
                "Introduction: Microgravity affects plant growth...",
                "Results: Plants grew 20% slower in space...",
                "Conclusion: Microgravity impacts plant physiology significantly..."
        ));
        publications.add(new Publication(
                "Human Muscle Loss in Space",
                "Introduction: Muscle atrophy occurs in astronauts...",
                "Results: 15% muscle mass lost after 6 months...",
                "Conclusion: Countermeasures like resistance exercise are necessary..."
        ));

        // Launch GUI on the Event Dispatch Thread
        SwingUtilities.invokeLater(() -> new SpaceBiology(publications));
    }
}
